apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: deploy-downstream-acm-and-hosted-cluster
spec:
  params:
    - name: clusterPoolName
      type: string
      description: The name of the clusterpool to use
      default: "hypershift-ci-pool"
    - name: clusterClaimName
      type: string
      description: The name of the clusterclaim to claim
      default: "hs-ci-dev-cluster"
    - name: clusterClaimLifetime
      type: string
      description: The length of the lifetime of the clusterclaim. Default 8h
      default: "8h"
    - name: namespace
      type: string
      description: The namespace to deploy ACM onto the target cluster
      default: "open-cluster-management"
    - name: downstream
      type: string
      description: The downstream DOWNSTREAM used to deploy ACM
      default: "2.0-latest"
    - name: sendNotification
      type: string
      description: Sends notification to slack if value is true
      default: "false"
  tasks:
    - name: fetch-repo-samples
      params:
        - name: url
          value: https://github.com/stolostron/hypershift-pipelines.git
        - name: revision
          value: main
        - name: deleteExisting
          value: "true"
        - name: subdirectory
          value: "samples"
        - name: gitInitImage
          value: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:afc5d3f9efe26c7042635d43b8ffd09d67936e3d0b6b901dc08a33e20313d361
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: validate-parameters
      params:
        - name: clusterPoolName
          value: $(params.clusterPoolName)
        - name: clusterClaimLifetime
          value: $(params.clusterClaimLifetime)
        - name: downstream
          value: "$(params.downstream)"
      taskRef:
        kind: Task
        name: deploy-acm-hyper-param-validation-27
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: checkout-hub-cluster
      params:
        - name: clusterClaimName
          value: $(params.clusterClaimName)
        - name: clusterPoolName
          value: $(params.clusterPoolName)
        - name: clusterClaimLifetime
          value: $(params.clusterClaimLifetime)
      runAfter:
        - fetch-repo-samples
        - validate-parameters
      taskRef:
        kind: Task
        name: deploy-acm-hyper-checkout-cluster
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: login-to-hub-cluster
      params:
        - name: username
          value: "$(tasks.checkout-hub-cluster.results.username)"
        - name: password
          value: "$(tasks.checkout-hub-cluster.results.password)"
        - name: api
          value: "$(tasks.checkout-hub-cluster.results.api)"
      runAfter:
        - checkout-hub-cluster
      taskRef:
        kind: Task
        name: deploy-acm-hyper-login-to-cluster
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: ensure-acm-prereqs
      params:
        - name: namespace
          value: "$(params.namespace)"
        - name: downstream
          value: "$(params.downstream)"
        - name: imagePullSecret
          value: "$(tasks.checkout-hub-cluster.results.imagePullSecret)"
      runAfter:
        - login-to-hub-cluster
      taskRef:
        kind: Task
        name: deploy-ds-acm-hyper-prereqs
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: ensure-acm
      params:
        - name: namespace
          value: $(params.namespace)
        - name: downstream
          value: "$(params.downstream)"
        - name: imagePullSecret
          value: "$(tasks.checkout-hub-cluster.results.imagePullSecret)"
      runAfter:
        - ensure-acm-prereqs
      taskRef:
        kind: Task
        name: deploy-acm-hyper-apply-sub
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: ensure-mch
      params:
        - name: namespace
          value: $(params.namespace)
      runAfter:
        - ensure-acm
      taskRef:
        kind: Task
        name: deploy-acm-hyper-apply-mch-27
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: create-hosted-cluster
      params:
        - name: targetManagedCluster
          value: local-cluster
      runAfter:
        - ensure-mch
      taskRef:
        kind: Task
        name: create-hosted-cluster
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: destroy-hosted-cluster
      params:
        - name: targetManagedCluster
          value: local-cluster
        - name: hostedClusterName
          value: "$(tasks.create-hosted-cluster.results.hostedClusterName)"
        - name: infraID
          value: "$(tasks.create-hosted-cluster.results.infraID)"
      runAfter:
        - create-hosted-cluster
      taskRef:
        kind: Task
        name: destroy-hosted-cluster
      workspaces:
        - name: source
          workspace: shared-workspace
  workspaces:
    - name: shared-workspace
  finally:
    - name: notify-status-ds
      params:
        - name: pipelineRunID
          value: "$(context.pipelineRun.name)"
        - name: sendNotification
          value: "$(params.sendNotification)"
        - name: downstream
          value: "$(params.downstream)"
        - name: runStatus
          value: "$(tasks.status)"
        - name: hubOcLogin
          value: "$(tasks.checkout-hub-cluster.results.ocLogin)"
      taskRef:
        kind: Task
        name: notify-status-ds-27
      workspaces:
        - name: source
          workspace: shared-workspace
    # - name: cleanup-acm-hosted-clusters
    #   params:
    #     - name: clusterClaimName
    #       value: $(params.clusterClaimName)
    #   taskRef:
    #     kind: Task
    #     name: cleanup-acm-hosted-clusters
    #   workspaces:
    #     - name: source
    #       workspace: shared-workspace
    # - name: cleanup-clusters
    #   params:
    #     - name: clusterClaimName
    #       value: $(params.clusterClaimName)
    #   taskRef:
    #     kind: Task
    #     name: cleanup-acm-hypershift-clusters
    #   workspaces:
    #     - name: source
    #       workspace: shared-workspace
